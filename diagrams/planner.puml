@startuml
hide empty members
note as N1
    Meta properties are omitted.

    Properties are assumed
    where fields are declared.
end note

class Planner {
    name : String
    owner : User
    acl : Acl
    children : List<PlanItem>
}
Planner *-- PlanItem : children
together {
    enum PlanState {
        PENDING
        ACQUIRED
        COMPLETE
    }
    enum PlanItemType {
        ' Presence of sourceRecipe indicates whether a GROUP item
        ' represents a recipe or a "simple" section.
        GROUP
        GROCERY_ITEM
    }
}
class PlanItem {
    type : PlanItemType
    state : PlanState
    dueDate : DateTime
    children : List<PlanItem>
    ' Locked at create time, supersedes ingredient.
    sourceRecipe : Recipe
    ' Per recipe-add event. If a recipe includes another recipe
    ' ingredients of the nested recipe will have to ids, one for
    ' the added recipe and one for the nested recipe. The IDs
    ' are opaque values used only for equality checks.
    recipeAddIds : List<Long>
    __ «Element» __
    name : String
    quantity : Quantity
    ' based on parsing name
    ingredient : Ingredient
    notes : String
}
'can't control direction of the arrow w/ class syntax
PlanItem .l.|> Element
PlanItem o-- Recipe : sourceRecipe
PlanItem *- PlanItem : children
PlanItem o-l- Ingredient : ingredient
PlanItem o-- PlanItemType : type
PlanItem o-- PlanState : state
interface Element {
    {abstract} raw : String
    {abstract} quantity : Quantity
    {abstract} ingredient : Ingredient
    {abstract} prep : String
}
interface Ingredient {
    {abstract} name : String
}
class GroceryItem implements Ingredient {
    name : String
}
class Recipe implements Ingredient {
    name : String
    instructions : String
    ingredients : List<Element>
}
Recipe *-u- IngredientRef : ingredients
class IngredientRef implements Element {
    raw : String
    quantity : Quantity
    ingredient : Ingredient
    prep : String
}
IngredientRef o-  Ingredient : ingredient
@enduml