server:
  use-forward-headers: true

spring:
  datasource:
    url: jdbc:postgresql:///${DB_NAME}
    hikari:
      data-source-properties:
        socketFactory: com.google.cloud.sql.postgres.SocketFactory
        cloudSqlInstance: folded-ear:us-west1:face-is-cookbook
  jpa:
    show-sql: false
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
app:
  # where 'index.html' lives from the UA's perspective
  public-url: https://cook.brennaswitzer.com/
  aws:
    bucket-name: foodinger
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - https://cook.brennaswitzer.com/post-oauth2/redirect

logging:
  level:
    org.springframework: debug
    com.brennaswitzer: debug
