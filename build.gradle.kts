/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    java
    `maven-publish`
    antlr
    id("org.springframework.boot") version "2.1.5.RELEASE"

    id("org.jetbrains.kotlin.jvm") version "1.5.21"
    id("org.jetbrains.kotlin.kapt") version "1.5.21"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.5.21"
    id("org.jetbrains.kotlin.plugin.jpa") version "1.5.21"
    id("org.jetbrains.kotlin.plugin.spring") version "1.5.21"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

val kotlinVersion = project.properties["kotlinVersion"]
val springBootVersion = project.properties["springBootVersion"]
val springSecurityVersion = project.properties["springSecurityVersion"]

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    implementation("org.springframework.security:spring-security-messaging:${springSecurityVersion}")
    implementation("io.jsonwebtoken:jjwt:0.9.0")
    implementation("org.springframework.security:spring-security-oauth2-client:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-oauth2-jose:${springSecurityVersion}")
    implementation("org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}")
    implementation("org.liquibase:liquibase-core:3.6.3")
    implementation("org.antlr:antlr4-runtime:4.7.2")
    implementation("org.yaml:snakeyaml:1.23")
    implementation("com.amazonaws:aws-java-sdk-s3:1.11.860")
    implementation("com.amazonaws:aws-java-sdk-textract:1.11.860")
    runtimeOnly("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
    runtimeOnly("com.h2database:h2:1.4.199") // todo: this should be test-only, right?
    runtimeOnly("org.postgresql:postgresql:42.2.5")
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testImplementation("org.springframework.security:spring-security-test:${springSecurityVersion}")

    kapt("org.hibernate:hibernate-jpamodelgen:5.3.10.Final")

    kapt("javax.xml.bind:jaxb-api:2.3.1")

    antlr("org.antlr:antlr4:4.7.2")

    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
}

group = "com.brennaswitzer"
version = "0.0.1-SNAPSHOT"
description = "Personal CookBook and meal planning software"
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<AntlrTask>() {
    arguments = arguments + listOf("-visitor", "-no-listener", "-long-messages")
}

tasks.withType<Delete>() {
    delete = setOf (
        "public_html"
    )
}
